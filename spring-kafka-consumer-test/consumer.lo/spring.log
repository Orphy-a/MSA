2025-04-09T10:50:43.651+09:00  INFO 3028 --- [spring-kafka-consumer-test] [restartedMain] k.c.j.SpringKafkaConsumerTestApplication : Starting SpringKafkaConsumerTestApplication using Java 17.0.12 with PID 3028 (C:\Users\lotte6\Desktop\workspace\MSA\spring-kafka-consumer-test\build\classes\java\main started by lotte6 in C:\Users\lotte6\Desktop\workspace\MSA\spring-kafka-consumer-test)
2025-04-09T10:50:43.651+09:00  INFO 3028 --- [spring-kafka-consumer-test] [restartedMain] k.c.j.SpringKafkaConsumerTestApplication : No active profile set, falling back to 1 default profile: "default"
2025-04-09T10:50:43.838+09:00  INFO 3028 --- [spring-kafka-consumer-test] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8081 (http)
2025-04-09T10:50:43.838+09:00  INFO 3028 --- [spring-kafka-consumer-test] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-04-09T10:50:43.838+09:00  INFO 3028 --- [spring-kafka-consumer-test] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-04-09T10:50:43.838+09:00  INFO 3028 --- [spring-kafka-consumer-test] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-04-09T10:50:43.838+09:00  INFO 3028 --- [spring-kafka-consumer-test] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 171 ms
2025-04-09T10:50:43.913+09:00  WARN 3028 --- [spring-kafka-consumer-test] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : Unable to start LiveReload server
2025-04-09T10:50:43.929+09:00  INFO 3028 --- [spring-kafka-consumer-test] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8081 (http) with context path '/'
2025-04-09T10:50:43.929+09:00  INFO 3028 --- [spring-kafka-consumer-test] [restartedMain] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9090]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-group-my-topic-02-4
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = group-my-topic-02
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2025-04-09T10:50:43.929+09:00  INFO 3028 --- [spring-kafka-consumer-test] [restartedMain] o.a.k.c.t.i.KafkaMetricsCollector        : initializing Kafka metrics collector
2025-04-09T10:50:43.929+09:00  INFO 3028 --- [spring-kafka-consumer-test] [restartedMain] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.8.1
2025-04-09T10:50:43.929+09:00  INFO 3028 --- [spring-kafka-consumer-test] [restartedMain] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 70d6ff42debf7e17
2025-04-09T10:50:43.929+09:00  INFO 3028 --- [spring-kafka-consumer-test] [restartedMain] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1744163443929
2025-04-09T10:50:43.929+09:00  INFO 3028 --- [spring-kafka-consumer-test] [restartedMain] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-group-my-topic-02-4, groupId=group-my-topic-02] Subscribed to topic(s): my-topic-02
2025-04-09T10:50:43.929+09:00  INFO 3028 --- [spring-kafka-consumer-test] [restartedMain] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9090]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-group-my-topic-01-5
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = group-my-topic-01
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2025-04-09T10:50:43.942+09:00  INFO 3028 --- [spring-kafka-consumer-test] [restartedMain] o.a.k.c.t.i.KafkaMetricsCollector        : initializing Kafka metrics collector
2025-04-09T10:50:43.945+09:00  INFO 3028 --- [spring-kafka-consumer-test] [restartedMain] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.8.1
2025-04-09T10:50:43.946+09:00  INFO 3028 --- [spring-kafka-consumer-test] [restartedMain] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 70d6ff42debf7e17
2025-04-09T10:50:43.946+09:00  INFO 3028 --- [spring-kafka-consumer-test] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-group-my-topic-02-4, groupId=group-my-topic-02] Cluster ID: qIfdUq3eSQulPb9HP-GBDQ
2025-04-09T10:50:43.946+09:00  INFO 3028 --- [spring-kafka-consumer-test] [restartedMain] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1744163443945
2025-04-09T10:50:43.946+09:00  INFO 3028 --- [spring-kafka-consumer-test] [restartedMain] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-group-my-topic-01-5, groupId=group-my-topic-01] Subscribed to topic(s): my-topic-01
2025-04-09T10:50:43.946+09:00  INFO 3028 --- [spring-kafka-consumer-test] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-group-my-topic-02-4, groupId=group-my-topic-02] Discovered group coordinator localhost:9090 (id: 2147483646 rack: null)
2025-04-09T10:50:43.946+09:00  INFO 3028 --- [spring-kafka-consumer-test] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-group-my-topic-02-4, groupId=group-my-topic-02] (Re-)joining group
2025-04-09T10:50:43.950+09:00  INFO 3028 --- [spring-kafka-consumer-test] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-group-my-topic-02-4, groupId=group-my-topic-02] Request joining group due to: need to re-join with the given member-id: consumer-group-my-topic-02-4-618c4467-9232-4677-ac76-09061019e725
2025-04-09T10:50:43.950+09:00  INFO 3028 --- [spring-kafka-consumer-test] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-group-my-topic-02-4, groupId=group-my-topic-02] (Re-)joining group
2025-04-09T10:50:43.950+09:00  INFO 3028 --- [spring-kafka-consumer-test] [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-group-my-topic-01-5, groupId=group-my-topic-01] Cluster ID: qIfdUq3eSQulPb9HP-GBDQ
2025-04-09T10:50:43.950+09:00  INFO 3028 --- [spring-kafka-consumer-test] [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-group-my-topic-01-5, groupId=group-my-topic-01] Discovered group coordinator localhost:9090 (id: 2147483646 rack: null)
2025-04-09T10:50:43.951+09:00  INFO 3028 --- [spring-kafka-consumer-test] [restartedMain] k.c.j.SpringKafkaConsumerTestApplication : Started SpringKafkaConsumerTestApplication in 0.315 seconds (process running for 809.098)
2025-04-09T10:50:43.951+09:00  INFO 3028 --- [spring-kafka-consumer-test] [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-group-my-topic-01-5, groupId=group-my-topic-01] (Re-)joining group
2025-04-09T10:50:43.952+09:00  INFO 3028 --- [spring-kafka-consumer-test] [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2025-04-09T10:50:43.952+09:00  INFO 3028 --- [spring-kafka-consumer-test] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-group-my-topic-02-4, groupId=group-my-topic-02] Successfully joined group with generation Generation{generationId=3, memberId='consumer-group-my-topic-02-4-618c4467-9232-4677-ac76-09061019e725', protocol='range'}
2025-04-09T10:50:43.952+09:00  INFO 3028 --- [spring-kafka-consumer-test] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-group-my-topic-02-4, groupId=group-my-topic-02] Finished assignment for group at generation 3: {consumer-group-my-topic-02-4-618c4467-9232-4677-ac76-09061019e725=Assignment(partitions=[my-topic-02-0, my-topic-02-1])}
2025-04-09T10:50:43.954+09:00  INFO 3028 --- [spring-kafka-consumer-test] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-group-my-topic-02-4, groupId=group-my-topic-02] Successfully synced group in generation Generation{generationId=3, memberId='consumer-group-my-topic-02-4-618c4467-9232-4677-ac76-09061019e725', protocol='range'}
2025-04-09T10:50:43.954+09:00  INFO 3028 --- [spring-kafka-consumer-test] [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-group-my-topic-01-5, groupId=group-my-topic-01] Request joining group due to: need to re-join with the given member-id: consumer-group-my-topic-01-5-48d76b99-7623-4aa1-91b7-77acece53c36
2025-04-09T10:50:43.954+09:00  INFO 3028 --- [spring-kafka-consumer-test] [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-group-my-topic-01-5, groupId=group-my-topic-01] (Re-)joining group
2025-04-09T10:50:43.954+09:00  INFO 3028 --- [spring-kafka-consumer-test] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-group-my-topic-02-4, groupId=group-my-topic-02] Notifying assignor about the new Assignment(partitions=[my-topic-02-0, my-topic-02-1])
2025-04-09T10:50:43.954+09:00  INFO 3028 --- [spring-kafka-consumer-test] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-group-my-topic-02-4, groupId=group-my-topic-02] Adding newly assigned partitions: my-topic-02-0, my-topic-02-1
2025-04-09T10:50:43.956+09:00  INFO 3028 --- [spring-kafka-consumer-test] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerUtils        : Setting offset for partition my-topic-02-0 to the committed offset FetchPosition{offset=50751, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9090 (id: 1 rack: null)], epoch=0}}
2025-04-09T10:50:43.956+09:00  INFO 3028 --- [spring-kafka-consumer-test] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerUtils        : Setting offset for partition my-topic-02-1 to the committed offset FetchPosition{offset=50253, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9090 (id: 1 rack: null)], epoch=0}}
2025-04-09T10:50:43.956+09:00  INFO 3028 --- [spring-kafka-consumer-test] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : group-my-topic-02: partitions assigned: [my-topic-02-0, my-topic-02-1]
2025-04-09T10:50:43.956+09:00  INFO 3028 --- [spring-kafka-consumer-test] [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-group-my-topic-01-5, groupId=group-my-topic-01] Successfully joined group with generation Generation{generationId=5, memberId='consumer-group-my-topic-01-5-48d76b99-7623-4aa1-91b7-77acece53c36', protocol='range'}
2025-04-09T10:50:43.956+09:00  INFO 3028 --- [spring-kafka-consumer-test] [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-group-my-topic-01-5, groupId=group-my-topic-01] Finished assignment for group at generation 5: {consumer-group-my-topic-01-5-48d76b99-7623-4aa1-91b7-77acece53c36=Assignment(partitions=[my-topic-01-0])}
2025-04-09T10:50:43.958+09:00  INFO 3028 --- [spring-kafka-consumer-test] [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-group-my-topic-01-5, groupId=group-my-topic-01] Successfully synced group in generation Generation{generationId=5, memberId='consumer-group-my-topic-01-5-48d76b99-7623-4aa1-91b7-77acece53c36', protocol='range'}
2025-04-09T10:50:43.958+09:00  INFO 3028 --- [spring-kafka-consumer-test] [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-group-my-topic-01-5, groupId=group-my-topic-01] Notifying assignor about the new Assignment(partitions=[my-topic-01-0])
2025-04-09T10:50:43.958+09:00  INFO 3028 --- [spring-kafka-consumer-test] [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-group-my-topic-01-5, groupId=group-my-topic-01] Adding newly assigned partitions: my-topic-01-0
2025-04-09T10:50:43.959+09:00  INFO 3028 --- [spring-kafka-consumer-test] [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerUtils        : Setting offset for partition my-topic-01-0 to the committed offset FetchPosition{offset=100005, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9090 (id: 1 rack: null)], epoch=0}}
2025-04-09T10:50:43.959+09:00  INFO 3028 --- [spring-kafka-consumer-test] [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : group-my-topic-01: partitions assigned: [my-topic-01-0]
2025-04-09T10:52:57.122+09:00  INFO 3028 --- [spring-kafka-consumer-test] [File Watcher] rtingClassPathChangeChangedEventListener : Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-04-09T10:52:57.124+09:00  INFO 3028 --- [spring-kafka-consumer-test] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-group-my-topic-02-4, groupId=group-my-topic-02] Revoke previously assigned partitions my-topic-02-0, my-topic-02-1
2025-04-09T10:52:57.124+09:00  INFO 3028 --- [spring-kafka-consumer-test] [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] k.c.c.i.ConsumerRebalanceListenerInvoker : [Consumer clientId=consumer-group-my-topic-01-5, groupId=group-my-topic-01] Revoke previously assigned partitions my-topic-01-0
2025-04-09T10:52:57.125+09:00  INFO 3028 --- [spring-kafka-consumer-test] [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : group-my-topic-01: partitions revoked: [my-topic-01-0]
2025-04-09T10:52:57.125+09:00  INFO 3028 --- [spring-kafka-consumer-test] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : group-my-topic-02: partitions revoked: [my-topic-02-0, my-topic-02-1]
2025-04-09T10:52:57.125+09:00  INFO 3028 --- [spring-kafka-consumer-test] [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-group-my-topic-01-5, groupId=group-my-topic-01] Member consumer-group-my-topic-01-5-48d76b99-7623-4aa1-91b7-77acece53c36 sending LeaveGroup request to coordinator localhost:9090 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
2025-04-09T10:52:57.125+09:00  INFO 3028 --- [spring-kafka-consumer-test] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-group-my-topic-02-4, groupId=group-my-topic-02] Member consumer-group-my-topic-02-4-618c4467-9232-4677-ac76-09061019e725 sending LeaveGroup request to coordinator localhost:9090 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
2025-04-09T10:52:57.125+09:00  INFO 3028 --- [spring-kafka-consumer-test] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-group-my-topic-02-4, groupId=group-my-topic-02] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-04-09T10:52:57.125+09:00  INFO 3028 --- [spring-kafka-consumer-test] [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-group-my-topic-01-5, groupId=group-my-topic-01] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-04-09T10:52:57.125+09:00  INFO 3028 --- [spring-kafka-consumer-test] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-group-my-topic-02-4, groupId=group-my-topic-02] Request joining group due to: consumer pro-actively leaving the group
2025-04-09T10:52:57.125+09:00  INFO 3028 --- [spring-kafka-consumer-test] [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-group-my-topic-01-5, groupId=group-my-topic-01] Request joining group due to: consumer pro-actively leaving the group
2025-04-09T10:52:57.125+09:00  INFO 3028 --- [spring-kafka-consumer-test] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-group-my-topic-02-4, groupId=group-my-topic-02] Unsubscribed all topics or patterns and assigned partitions
2025-04-09T10:52:57.125+09:00  INFO 3028 --- [spring-kafka-consumer-test] [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-group-my-topic-01-5, groupId=group-my-topic-01] Unsubscribed all topics or patterns and assigned partitions
2025-04-09T10:52:57.125+09:00  INFO 3028 --- [spring-kafka-consumer-test] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-group-my-topic-02-4, groupId=group-my-topic-02] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-04-09T10:52:57.125+09:00  INFO 3028 --- [spring-kafka-consumer-test] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-group-my-topic-02-4, groupId=group-my-topic-02] Request joining group due to: consumer pro-actively leaving the group
2025-04-09T10:52:57.125+09:00  INFO 3028 --- [spring-kafka-consumer-test] [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-group-my-topic-01-5, groupId=group-my-topic-01] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-04-09T10:52:57.125+09:00  INFO 3028 --- [spring-kafka-consumer-test] [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-group-my-topic-01-5, groupId=group-my-topic-01] Request joining group due to: consumer pro-actively leaving the group
2025-04-09T10:52:57.524+09:00  INFO 3028 --- [spring-kafka-consumer-test] [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2025-04-09T10:52:57.524+09:00  INFO 3028 --- [spring-kafka-consumer-test] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Metrics scheduler closed
2025-04-09T10:52:57.524+09:00  INFO 3028 --- [spring-kafka-consumer-test] [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-04-09T10:52:57.524+09:00  INFO 3028 --- [spring-kafka-consumer-test] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-04-09T10:52:57.524+09:00  INFO 3028 --- [spring-kafka-consumer-test] [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-04-09T10:52:57.524+09:00  INFO 3028 --- [spring-kafka-consumer-test] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-04-09T10:52:57.524+09:00  INFO 3028 --- [spring-kafka-consumer-test] [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2025-04-09T10:52:57.524+09:00  INFO 3028 --- [spring-kafka-consumer-test] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.apache.kafka.common.metrics.Metrics    : Metrics reporters closed
2025-04-09T10:52:57.527+09:00  INFO 3028 --- [spring-kafka-consumer-test] [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-group-my-topic-01-5 unregistered
2025-04-09T10:52:57.528+09:00  INFO 3028 --- [spring-kafka-consumer-test] [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : group-my-topic-01: Consumer stopped
2025-04-09T10:52:57.528+09:00  INFO 3028 --- [spring-kafka-consumer-test] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-group-my-topic-02-4 unregistered
2025-04-09T10:52:57.528+09:00  INFO 3028 --- [spring-kafka-consumer-test] [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : group-my-topic-02: Consumer stopped
2025-04-09T10:52:57.528+09:00  INFO 3028 --- [spring-kafka-consumer-test] [Thread-9] o.s.b.w.e.tomcat.GracefulShutdown        : Commencing graceful shutdown. Waiting for active requests to complete
2025-04-09T10:52:57.630+09:00  INFO 3028 --- [spring-kafka-consumer-test] [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown        : Graceful shutdown complete
